/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package latihancrud;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author leorence
 */
public class crud extends javax.swing.JFrame {

    final static String Driver = "com.mysql.jdbc.Driver";
    final static String Url = "jdbc:mysql://localhost/latihan";
    final static String User = "root";
    final static String Pass = "";
    static Connection conn;
    static Statement st;
    static ResultSet rs;

    /**
     * Creates new form crud
     */
    public crud() {
        initComponents();
        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();
        int x = layar.width / 2 - this.getWidth() / 2;
        int y = layar.height / 2 - this.getHeight() / 2;
        this.setLocation(x, y);
        koneksiDatabase();
        tampilData();
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtnama = new javax.swing.JTextField();
        txtnim = new javax.swing.JTextField();
        txtsemester = new javax.swing.JTextField();
        bubah = new javax.swing.JButton();
        bhapus = new javax.swing.JButton();
        bsimpan = new javax.swing.JButton();
        tbbatal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmahasiswa = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Century Schoolbook L", 0, 24)); // NOI18N
        jLabel1.setText("Belajar CRUD");

        jLabel2.setText("Nim            :");

        jLabel3.setText("Nama         :");

        jLabel4.setText("Semester   :");

        bubah.setText("Ubah");
        bubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubahActionPerformed(evt);
            }
        });

        bhapus.setText("Hapus");
        bhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bhapusActionPerformed(evt);
            }
        });

        bsimpan.setText("Simpan");
        bsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsimpanActionPerformed(evt);
            }
        });

        tbbatal.setText("Batal");
        tbbatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbbatalActionPerformed(evt);
            }
        });

        tblmahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nim", "Nama", "Semester"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblmahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmahasiswaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblmahasiswa);
        if (tblmahasiswa.getColumnModel().getColumnCount() > 0) {
            tblmahasiswa.getColumnModel().getColumn(0).setResizable(false);
            tblmahasiswa.getColumnModel().getColumn(1).setResizable(false);
            tblmahasiswa.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(56, 56, 56)
                            .addComponent(bsimpan)
                            .addGap(31, 31, 31)
                            .addComponent(bubah)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bhapus)
                            .addGap(35, 35, 35)
                            .addComponent(tbbatal))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(36, 36, 36)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtnama))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtnim, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtsemester)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtnim, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtnama, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtsemester, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbbatal)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bubah)
                        .addComponent(bsimpan)
                        .addComponent(bhapus)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsimpanActionPerformed
        String nim = txtnim.getText();
        String nama = txtnama.getText();
        String semester = txtsemester.getText();
        if (nim.equals("") || nama.equals("") || semester.equals("")) {
            JOptionPane.showMessageDialog(null, "Mohon masukkan data untuk di input", "Perhatian", JOptionPane.WARNING_MESSAGE);
            txtnim.requestFocus();
        } else {
            try {
                st = conn.createStatement();
                ResultSet data = st.executeQuery("Select * from mahasiswa where nim = '" + nim + "'");
                if (data.next()) {
                    JOptionPane.showMessageDialog(null, "NIM sudah ada", "Perhatian", JOptionPane.WARNING_MESSAGE);
                    txtnim.requestFocus();
                } else {
                    String sql = "Insert into mahasiswa values ('" + nim + "', '" + nama + "', '" + semester + "');";
                    st.executeUpdate(sql);
                    txtnim.setText("");
                    txtnama.setText("");
                    txtsemester.setText("");
                    txtnim.requestFocus();
                    JOptionPane.showMessageDialog(null, "Data berhasil di input", "Simpan", JOptionPane.INFORMATION_MESSAGE);
                    tampilData();
                }
                st.close();
            } catch (Exception e) {
                System.err.println("Terjadi kesalahan : " + e);
            }
        }
    }//GEN-LAST:event_bsimpanActionPerformed

    private void bubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubahActionPerformed
        // jangan tulis ID setelah SET
        /*String nim = txtnim.getText();
        String nama = txtnama.getText();
        String semester = txtsemester.getText();
        if (nim.equals("") || nama.equals("") || semester.equals("")) {
            JOptionPane.showMessageDialog(null, "Mohon masukkan data untuk di rubah", "Perhatian", JOptionPane.WARNING_MESSAGE);
            txtnim.requestFocus();
        } else {
            try {
                conn = DriverManager.getConnection(Url, User, Pass);
                st = conn.createStatement();
                String sql = "UPDATE mahasiswa SET nim = '" + txtnim.getText() + "', nama = '" + txtnama.getText() + "', semester = '" + txtsemester.getText() + "' WHERE nim ='" + txtnim.getText() + "'";
                st.executeUpdate(sql);
                txtnim.setText("");
                txtnama.setText("");
                txtsemester.setText("");
                txtnim.requestFocus();
                JOptionPane.showMessageDialog(null, "Data telah dirubah!");
                tampilData();
            } catch (Exception x) {
                System.err.println("Terjadi kesalahan : " + x);
            }
        }*/
        int ok = JOptionPane.showConfirmDialog(null, "Yakin ingin mengubah?", "Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
        if (ok == 0) {
            String sql = "update mahasiswa set nama = '"+txtnama.getText()+"', semester = '"+txtsemester.getText()+"' where nim = '"+txtnim.getText()+"'";
            if (txtnim.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Data masih kosong!", "Ubah data", JOptionPane.WARNING_MESSAGE);
                txtnim.requestFocus();
            } else {
                try{
                    st = conn.createStatement();
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Data berhasil di ubah", "Ubah data", JOptionPane.INFORMATION_MESSAGE);
                    st.close();
                    txtnim.requestFocus();
                    tampilData();
                } catch (Exception exc) {
                    System.err.println("Error : "+exc);
                }
            }
        }
    }//GEN-LAST:event_bubahActionPerformed

    private void tblmahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmahasiswaMouseClicked
        /*try {
            int row = tblmahasiswa.getSelectedRow();
            String tabclick = (tblmahasiswa.getModel().getValueAt(row, 0).toString());
            String sql = "select * from mahasiswa where nim = '" + tabclick + "'";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            if (rs.next()) {
                String add1 = rs.getString("nim");
                txtnim.setText(add1);
                String add2 = rs.getString("nama");
                txtnama.setText(add2);
                String add3 = rs.getString("semester");
                txtsemester.setText(add3);
            }
        } catch (Exception e) {

        }*/
        int baris = tblmahasiswa.getSelectedRow();
        if (baris != -1) {
            txtnim.setText(tblmahasiswa.getValueAt(baris, 0).toString());
            txtnama.setText(tblmahasiswa.getValueAt(baris, 1).toString());
            txtsemester.setText(tblmahasiswa.getValueAt(baris, 2).toString());
        }
    }//GEN-LAST:event_tblmahasiswaMouseClicked

    private void tbbatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbbatalActionPerformed
        txtnim.setText("");
        txtnama.setText("");
        txtsemester.setText("");
        txtnim.requestFocus();
        tblmahasiswa.clearSelection();
    }//GEN-LAST:event_tbbatalActionPerformed

    private void bhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bhapusActionPerformed
        /*String nim = txtnim.getText();
        String nama = txtnama.getText();
        String semester = txtsemester.getText();
        if (nim.equals("") || nama.equals("") || semester.equals("")) {
            JOptionPane.showMessageDialog(null, "Mohon masukkan data untuk di Hapus!", "Perhatian", JOptionPane.WARNING_MESSAGE);
            txtnim.requestFocus();
        } else {
            try {
                int x = JOptionPane.showConfirmDialog(null, "Yakin akan menghapus?");
                if (x == JOptionPane.YES_OPTION) {
                    conn = DriverManager.getConnection(Url, User, Pass);
                    st = conn.createStatement();
                    String sql = "DELETE FROM mahasiswa WHERE nim = '" + txtnim.getText() + "'";
                    st.executeUpdate(sql);
                    tampilData();
                    txtnim.setText("");
                    txtnama.setText("");
                    txtsemester.setText("");
                    JOptionPane.showMessageDialog(null, "Data telah terhapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    txtnim.requestFocus();
                }
                st.close();
            } catch (Exception x) {
                System.err.println("Terjadi kesalahan : " + x);
            }
        }*/
        //String sql = "update nama_table set nama = '', nim = '', sem = ''";
        int ok = JOptionPane.showConfirmDialog(null, "Apakah anda yakin akan menghapus data ini?", "Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
        if (ok == 0) {
            String sql = "delete from mahasiswa where nim = '"+txtnim.getText().trim()+"'";
            try{
                st = conn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus", "Hapus data", JOptionPane.INFORMATION_MESSAGE);
                st.close();
                txtnim.setText("");
                txtnama.setText("");
                txtsemester.setText("");
                txtnim.requestFocus();
                tampilData();
            } catch (SQLException ex) {
                Logger.getLogger(crud.class.getName()).log(Level.SEVERE, null, ex);
                System.err.println(sql);
                System.out.println("Error : "+ex);
            } 
        }
    }//GEN-LAST:event_bhapusActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crud().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bhapus;
    private javax.swing.JButton bsimpan;
    private javax.swing.JButton bubah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton tbbatal;
    private javax.swing.JTable tblmahasiswa;
    private javax.swing.JTextField txtnama;
    private javax.swing.JTextField txtnim;
    private javax.swing.JTextField txtsemester;
    // End of variables declaration//GEN-END:variables
    private void tampilData() {
        //membuat table model
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("NIM");
        model.addColumn("Nama");
        model.addColumn("Semester");
        tblmahasiswa.setModel(model);

//        menampilkan database kedalam table
        try {
            st = conn.createStatement();
            ResultSet data = st.executeQuery("Select * from mahasiswa");
            while (data.next()) {
                model.addRow(new Object[]{
                    data.getString("nim"),
                    data.getString("nama"),
                    data.getString("semester")
                });
                tblmahasiswa.setModel(model);
            }
        } catch (Exception e) {
            System.err.println("terjadi kesalahan : " + e);
        }
    }

    private void koneksiDatabase() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost/latihan", "root", "");
            System.out.println("Koneksi Database Berhasil");
        } catch (Exception e) {
            System.out.println("Koneksi database gagal " + e);
        }
    }
}
